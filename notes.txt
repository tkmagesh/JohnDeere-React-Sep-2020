Day - 01
    RIA (Rich Internet Application)

JavaScript
    DataTypes
        number, boolean, string
        undefined, object, function

    Programming Constructs
        var, if else, switch case, while, for, try catch finally, throw, function

    APIs
        Array, Math, RegEx, setTimeout, clearTimeout, setInterval, clearInterval, Error

    misc

        - loosely typed
        - dynamic
        - functional

        - 'this' context

        It doesnt not matter where the function is OR who owns the function
        What matters is HOW THE FUNCTION IS INVOKED

        When a function is invoked

            - As a method of an object
                this -> object

            - As a function
                this -> global scope (window)

            - call method

            - apply method

            - immediately invoked function expression

            - using the 'new' keyword

        Functions are variadic by default
            arguments 
                - array like object
                    - individual arguments can be accessed using the indexer
                            arguments[0]
                            arguments[1]
                            arguments[2]
                    - use the 'length' attribute to find the number of arguments


add(10,20)
add(10,'20')
add(10,'abc')
add([10,20],[30,40])
add([10,20],[30,'40'])
add([10,20],[30,'abc'])
add([10,20],[30,[40,'abc']])
add(function(){ return 10; }, function(){ return 20; })
add(function(){ return [10,20]; }, function(){ return [30,[40,'abc']]; })
add(function(){ return function(){ return 10; }})
add([function(){ return [10,20]; }, function(){ return [30,[40,'abc']]; }])
add(function(){ return [function(){ return [10,20]; }, function(){ return [30,[40,'abc']]; }]})
add(10)
add(10,20,30,40,50)
add()

function add(){
    var result = 0;
    function parseArg(n){
        if (typeof n === 'function') return parseArg(n());
        if (Array.isArray(n)) return add.apply(this, n);
        return isNaN(n) ? 0 : parseInt(n);
    }
    return arguments.length <= 1 ? parseArg(arguments[0]) : parseArg(arguments[0]) + add(Array.prototype.slice.call(arguments, 1));
}

//ES6 Version

function add(...args){
    var result = 0;
    function parseArg(n){
        if (typeof n === 'function') return parseArg(n());
        if (Array.isArray(n)) return add(...n);
        return isNaN(n) ? 0 : parseInt(n);
    }
    return args.length <= 1 ? parseArg(args[0]) : parseArg(args[0]) + add(args.slice(1));
}

Closure

    clickTracker.html


Constructor Functions

    when a function is invoked using the 'new' keyword
        this -> new object
        this -> returned by default

    convention -> constructor function name starts with an uppercase letter

    constructor -> attrbute of the object that maintains the reference to the constructor function


Inheritence (Prototypal)


Hiding is costly!!

Day-1 self study
    'bind' method of a function
    map, reduce, forEach, filter methods of array
    jQuery


ES6 (ECMAScript 6, ES2015, ESNext)
1. let
2. const
3. Array destructuring
4. Rest operator (Array)
5. Spread operator (Array)
6. Object destructuring
7. Rest operator (Object)
8. Spread operator (Object)
9. default arguments
10. arrow functions
11. template strings
12. classes

http://es6-features.org

React Components
    Encapsulation of Presentation + UI Behavior + State

JSX Vs HTML
Every open tag must have a close tag
Use 'htmlFor' instead of 'for'
Use 'className' instead of 'class'


Day-2 Assignment
Solve the SalaryCalculator using react.js


State
    UI State
        supports the presentation logic of the application
        It is very very unlikely that this data might be needed in other parts of the application
        Maintain this in the component (using state)

    Application State
        supports the business logic of the application
        It is very very LIKELY that this data might be needed in other parts of the application
        DONT maintain this in the component (using state)


Redux (To manage application state)
    Store
    

npx create-react-app my-app

ES6 Modules
1. Everthing defined in a js/jsx file is considered private to that file
2. If any entity has to be made public, it has to be explicitly "exported"
3. If any public entity has to be used, it has to be explicitly "imported"

Installing redux
npm install redux
OR
yarn add redux

src
    /bugTracker
        /actions
        /views
        index.js
    /reducers
        bugsReducer.js
    /store
        index.js
        

Container Component / Smart Component
    (This interacts with the redux infrastructure)
    BugTracker

Presentation Component / Dumb component
    (This gets the data and actions from the container component)
    This doesnt interact with the redux infrastructure
    BugStats
    BugEdit
    BugSort
    BugList
    BugItem

Assignment
    Implement "listing, adding and removing projects"
    

react-redux
    connect (HOC)
        extracting data to be passed to the component
        creating action dispatchers to be passed to the component

    Provider
        makes the redux store available to the connected (above) components

npm install react-redux
OR
yarn add react-redux


Routing
npm install react-router-dom
OR
yarn add react-router-dom



After training assignments
1. Implement sorting
2. Display information about the selected bug in the BugInfo component
3. When navigated to BugTracker component from 'Projects' component, display only the bugs for that project
4. Implement pagination in BugTracker component


React Hooks
    functions that manage side effects for a functional component
    hook functions must start with the word 'use'
    built in hooks in React
        useState
        useEffect
        useMemo
        useReducer
        useRef

Packaging a web app
    Compile JSX
    minify the js
    uglify the js 
    bundle the js
    version the js

    compile scss/less/compass
    minify the css
    bundle the css
    version the css

    updated the references of the build generated js & css files in the index.html
    minify the index.html
    
    the final generated resources need to copied to the build folder for deployment


    npm run build
    OR
    yarn build


    http://bit.ly/react-videos
    http://bit.ly/javascript-training-videos

    tkmagesh77@gmail.com
    99019-11221

    Feedback:
    http://erp.optimistikinfo.com/participantsfeedback/feedback/239